{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","pages/Login/login-logic.ts","components/FormLabel.tsx","pages/Login/LoginUI.tsx","pages/Login/Login.tsx"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","reducer","state","action","type","payload","Label","styled","label","fontSize","display","flexDirection","padding","margin","FormLabel","children","Form","form","maxWidth","LoginUI","onChange","onSubmit","name","email","errorMessage","placeholder","Login","uiProps","authContext","useAuthContext","error","useReducer","dispatch","useEffect","console","message","undefined","event","currentTarget","inputName","setUserDetails","preventDefault","useLoginLogic"],"mappings":"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","file":"static/js/4.6c14c7f9.chunk.js","sourcesContent":["import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { useEffect, useReducer } from 'react';\nimport { useAuthContext } from '../../api/use-login';\nimport { UIProps } from './LoginUI';\n\ninterface FormState {\n  [x: string]: string;\n}\n\ninterface ChangeAction {\n  type: string;\n  payload: string;\n}\n\n// Create a simple \"key-value\" store for the form data\n// (This may be a bit overkill for such a simple component tbh...)\nconst reducer = (state: FormState, action: ChangeAction): FormState => ({\n  ...state,\n  [action.type]: action.payload,\n});\n\nexport function useLoginLogic(): UIProps {\n  const authContext = useAuthContext();\n  const { error } = authContext;\n  const [state, dispatch] = useReducer(reducer, {\n    name: authContext.name,\n    email: authContext.email,\n  });\n  const { name, email } = state;\n\n  // Log the error in case we can't display it properly\n  useEffect(() => {\n    if (error) console.error(error);\n  }, [error]);\n\n  const errorMessage = typeof error?.message === 'string' ? error.message : undefined;\n\n  return {\n    name,\n    email,\n    errorMessage,\n    onChange(event) {\n      const { name: inputName, value } = event.currentTarget;\n      dispatch({ type: inputName, payload: value });\n    },\n    onSubmit(event) {\n      authContext.setUserDetails({ name, email });\n      event.preventDefault(); // Prevent page refresh\n    },\n  };\n}\n","import styled from 'styled-components';\n\nconst Label = styled.label({\n  fontSize: '11px',\n  display: 'flex',\n  flexDirection: 'column',\n  padding: '8px',\n  '& *': {\n    margin: '2px 0',\n  },\n});\n\ninterface Props {\n  label: string;\n  children?: React.ReactNode;\n}\n\nexport function FormLabel({ label, children }: Props): JSX.Element {\n  return (\n    <Label>\n      <span>{label}</span>\n      {children}\n    </Label>\n  );\n}\n","import styled from 'styled-components';\nimport { FormEvent, ChangeEvent } from 'react';\nimport { Button, ErrorCard, Input } from '../../components/BaseUI';\nimport { FormLabel } from '../../components/FormLabel';\n\nexport interface UIProps {\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  onSubmit: (event: FormEvent<HTMLFormElement>) => void;\n  name: string;\n  email: string;\n  errorMessage?: string;\n}\n\nconst Form = styled.form({\n  maxWidth: '300px',\n  margin: '0 auto',\n  padding: '8px',\n  display: 'flex',\n  flexDirection: 'column',\n});\n\nexport function LoginUI({ onChange, onSubmit, name, email, errorMessage }: UIProps): JSX.Element {\n  // Typically a library like formik would be used for forms. I'm using barebones react here\n  // instead though as it's so minimal and to show how it could be done without libraries.\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <FormLabel label=\"Name:\">\n          <Input name=\"name\" type=\"text\" value={name} placeholder=\"Your name\" onChange={onChange} />\n        </FormLabel>\n        <FormLabel label=\"Email:\">\n          <Input\n            name=\"email\"\n            type=\"email\"\n            value={email}\n            placeholder=\"Your email\"\n            onChange={onChange}\n          />\n        </FormLabel>\n        {!!errorMessage && <ErrorCard>{errorMessage}</ErrorCard>}\n        <Button type=\"submit\">Login</Button>\n      </Form>\n    </>\n  );\n}\n","import { useLoginLogic } from './login-logic';\nimport { LoginUI } from './LoginUI';\n\n// Splitting up logic and UI has several benefits. It e.g. allows more granular testing\n// and storybook stories, and it's a nice separation of concerns.\nconst Login = (): JSX.Element => {\n  const uiProps = useLoginLogic();\n\n  return <LoginUI {...uiProps} />;\n};\n\nexport default Login;\n"],"sourceRoot":""}