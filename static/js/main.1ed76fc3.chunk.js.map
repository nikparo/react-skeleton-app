{"version":3,"sources":["components/Navbar.tsx","layouts/MainLayout.tsx","components/AuthGuard.tsx","routes.tsx","App.tsx","reportWebVitals.ts","index.tsx","api/use-login.ts","components/BaseUI.tsx"],"names":["NavbarList","styled","List","display","flexDirection","Navbar","to","MainLayoutRoot","div","height","overflow","width","MainLayoutContent","flex","position","MainLayout","AuthGuard","children","redirectOnAuth","redirectTo","location","useLocation","useAuthContext","isLoggedIn","pathname","Login","lazy","Authors","NoMatch","Logout","setUserDetails","useEffect","name","email","routes","path","element","fallback","index","App","authContext","useLogin","useRoutes","Provider","value","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","defaultAuthContext","console","error","AuthContext","React","createContext","useContext","loginFetcher","fetch","method","body","JSON","stringify","client_id","headers","res","json","useState","shouldLogin","Boolean","result","useSWR","dedupingInterval","data","slToken","sl_token","Box","padding","margin","FlexRow","Button","button","Input","input","ul","listStyleType","ListItem","li","border","borderRadius","ErrorCard","p","color","background"],"mappings":"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","file":"static/js/main.1ed76fc3.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { List, ListItem } from './BaseUI';\n\nconst NavbarList = styled(List)({\n  display: 'flex',\n  flexDirection: 'row',\n});\n\nexport const Navbar = () => (\n  <nav>\n    <NavbarList>\n      <ListItem>\n        <Link to=\"/\">Home</Link>\n      </ListItem>\n      <ListItem>\n        <Link to=\"/logout\">Logout</Link>\n      </ListItem>\n    </NavbarList>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { Navbar } from '../components/Navbar';\n\nconst MainLayoutRoot = styled.div({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  overflow: 'hidden',\n  width: '100%',\n});\n\nconst MainLayoutContent = styled.div({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto',\n  position: 'relative',\n});\n\nexport function MainLayout() {\n  return (\n    <MainLayoutRoot>\n      <Navbar />\n      <MainLayoutContent>\n        <Outlet />\n      </MainLayoutContent>\n    </MainLayoutRoot>\n  );\n}\n","import { ReactNode } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuthContext } from '../api/use-login';\n\ninterface Props {\n  children: ReactNode;\n  redirectOnAuth?: boolean;\n  redirectTo: string;\n}\n\nexport default function AuthGuard({ children, redirectOnAuth, redirectTo }: Props) {\n  const location = useLocation();\n  const { isLoggedIn } = useAuthContext();\n\n  // This is done so that in case the route changes by any chance through other\n  // means between the moment of request and the render we navigate to the initially\n  // requested route.\n  if (!!redirectOnAuth === isLoggedIn && redirectTo && location.pathname !== redirectTo) {\n    return <Navigate to={redirectTo} />;\n  }\n\n  return <>{children}</>;\n}\n","import { lazy, Suspense, useEffect } from 'react';\nimport { Link, Navigate, RouteObject } from 'react-router-dom';\n\nimport { MainLayout } from './layouts/MainLayout';\nimport AuthGuard from './components/AuthGuard';\nimport { useAuthContext } from './api/use-login';\n\nconst Login = lazy(() => import('./pages/Login'));\nconst Authors = lazy(() => import('./pages/Authors'));\n\nfunction NoMatch() {\n  return (\n    <div>\n      <h2>Nothing to see here!</h2>\n      <p>\n        <Link to=\"/\">Go to the home page</Link>\n      </p>\n    </div>\n  );\n}\n\nfunction Logout() {\n  const { setUserDetails } = useAuthContext();\n  useEffect(() => {\n    setUserDetails({ name: '', email: '' });\n  }, [setUserDetails]);\n\n  return <Navigate to=\"/login\" />;\n}\n\nexport const routes: RouteObject[] = [\n  {\n    path: 'login',\n    element: (\n      <AuthGuard redirectOnAuth redirectTo=\"/\">\n        <Suspense fallback={<>Loading login screen</>}>\n          <Login />\n        </Suspense>\n      </AuthGuard>\n    ),\n  },\n  {\n    path: '/',\n    element: (\n      <AuthGuard redirectTo=\"/login\">\n        <MainLayout />\n      </AuthGuard>\n    ),\n    children: [\n      // Seems React Router v6 does not support multiple paths per route, at least not directly\n      {\n        index: true,\n        element: (\n          <Suspense fallback={<>Loading posts</>}>\n            <Authors />\n          </Suspense>\n        ),\n      },\n      {\n        path: 'authors/:authorId',\n        element: (\n          <Suspense fallback={<>Loading posts</>}>\n            <Authors />\n          </Suspense>\n        ),\n      },\n      {\n        path: 'logout',\n        element: <Logout />,\n      },\n      {\n        path: '*',\n        element: <NoMatch />,\n      },\n    ],\n  },\n];\n","import { useRoutes } from 'react-router-dom';\n\nimport { AuthContext, useLogin } from './api/use-login';\nimport { routes } from './routes';\n\nexport default function App() {\n  const authContext = useLogin();\n  const element = useRoutes(routes);\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <div className=\"App\">{element}</div>;\n    </AuthContext.Provider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useContext, useState } from 'react';\nimport useSWR from 'swr';\n\ninterface Response {\n  data?: {\n    client_id: string;\n    email: string;\n    sl_token: string;\n  };\n  meta: {\n    request_id: string;\n  };\n  error?: {\n    message: string;\n  };\n}\n\ntype LoginFn = ({ name, email }: { name: string; email: string }) => void;\n\ninterface AuthContextValue {\n  slToken?: string;\n  error?: { message: string };\n  isLoggedIn: boolean;\n  setUserDetails: LoginFn;\n  name: string;\n  email: string;\n}\n\nexport const defaultAuthContext: AuthContextValue = {\n  isLoggedIn: false,\n  setUserDetails() {\n    console.error('setUserDetails stub called!');\n  },\n  name: '',\n  email: '',\n};\n\nexport const AuthContext = React.createContext(defaultAuthContext);\n\nexport function useAuthContext() {\n  return useContext(AuthContext);\n}\n\nconst loginFetcher = (name: string, email: string): Promise<Response> =>\n  fetch('https://api.supermetrics.com/assignment/register', {\n    method: 'POST',\n    body: JSON.stringify({\n      client_id: 'ju16a6m81mhid5ue1z3v2g0uh',\n      email,\n      name,\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  }).then((res) => res.json());\n\nexport function useLogin(): AuthContextValue {\n  const [{ name, email }, setUserDetails] = useState({ name: '', email: '' });\n  const shouldLogin = Boolean(name || email);\n\n  const result = useSWR<Response, Error>(shouldLogin ? [name, email] : null, loginFetcher, {\n    dedupingInterval: 1000 * 60 * 55, // Revalidate in 55min\n  });\n\n  // Ideally we would validate data here or in the loginFetcher\n  const { data } = result;\n  const error = result.error || data?.error;\n  const { sl_token: slToken } = data?.data || {};\n  const isLoggedIn = Boolean(shouldLogin && slToken && !error);\n\n  return { slToken, error, isLoggedIn, name, email, setUserDetails };\n}\n","import styled from 'styled-components';\n\nexport const Box = styled.div({\n  padding: '8px',\n  margin: '8px',\n});\n\nexport const FlexRow = styled.div({\n  display: 'flex',\n  flexDirection: 'row',\n  width: '100%',\n});\n\nexport const Button = styled.button({\n  padding: '8px 12px',\n  margin: '8px',\n});\n\nexport const Input = styled.input({\n  padding: '8px 12px',\n  margin: '8px',\n});\n\nexport const List = styled.ul({\n  margin: 0,\n  padding: 0,\n  listStyleType: 'none',\n});\n\nexport const ListItem = styled.li({\n  border: '1px solid #ddd',\n  borderRadius: '2px',\n  margin: '8px',\n  padding: '8px',\n});\n\nexport const ErrorCard = styled.p({\n  padding: '12px',\n  margin: '8px',\n  color: 'red',\n  background: 'rgba(206, 17, 38, 0.05)',\n});\n"],"sourceRoot":""}